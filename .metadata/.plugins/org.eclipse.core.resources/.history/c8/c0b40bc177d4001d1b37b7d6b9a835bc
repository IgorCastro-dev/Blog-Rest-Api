package com.igor.blog.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.igor.blog.dto.CommentDto;
import com.igor.blog.service.CommentService;

import lombok.AllArgsConstructor;

@RestController
@RequestMapping("api/")
@AllArgsConstructor
public class CommentController {
	
	private CommentService commentService;
	
	@PostMapping("posts/{postId}/comments")
	private ResponseEntity<CommentDto> createComment(@PathVariable("postId") Long postId,@RequestBody CommentDto commentDto){
		return new ResponseEntity<>(commentService.createComment(postId, commentDto),HttpStatus.CREATED);
	}
	
	@GetMapping("posts/{postId}/comments")
	private ResponseEntity<List<CommentDto>> getAllComments(@PathVariable("postId") Long postId){
		return new ResponseEntity<>(commentService.getAllComments(postId),HttpStatus.OK);
	}
	
	@GetMapping("posts/{postId}/comments/{commentId}")
	private ResponseEntity<CommentDto> getCommentById(@PathVariable("postId") Long postId,@PathVariable("commentId") Long commentId){
		return new ResponseEntity<>(commentService.getCommentById(postId, commentId),HttpStatus.OK);
	}
	
	@PutMapping("posts/{postId}/comments/{commentId}")
	private ResponseEntity<CommentDto> updateCommentByPostId(@PathVariable("postId") Long postId,
													  @PathVariable("commentId") Long commentId,
													  @RequestBody CommentDto commentDto){
		return new ResponseEntity<>(commentService.updateCommentByPostId(postId, commentId, commentDto),HttpStatus.OK);
	}
	
	@DeleteMapping("posts/{postId}/comments/{commentId}")
	private ResponseEntity<Void> deleteCommentByPostId(@PathVariable("postId") Long postId,@PathVariable("commentId") Long commentId){
		return new ResponseEntity<>(commentService.deleteCommentByPostId(postId,commentId),HttpStatus.OK);
	}
}








